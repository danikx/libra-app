spring:
  application:
    name: netcracker-libra
  
  datasource:
    url: jdbc:postgresql://${DB_URL:localhost}:${DB_PORT:5432}/${DB_NAME:libra_db}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: ${DB_POOL_MAX_SIZE:10}
      minimum-idle: ${DB_POOL_MIN_IDLE:5}
      idle-timeout-ms: ${DB_POOL_IDLE_TIMEOUT_MS:300000} # 5 minutes
      connection-timeout-ms: ${DB_POOL_CONN_TIMEOUT_MS:20000} # 20 seconds
      max-lifetime-ms: ${DB_POOL_MAX_LIFETIME_MS:1200000} 
  
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
  
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    schemas: public
  
  security:
    basic:
      enabled: true
    filter:
      order: 5

  kafka:
    bootstrap-servers: ${KAFKA_BROKER:localhost:29092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID:libra-group}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.json.trusted.packages: "*"  
        spring.json.type.mapping: AuthorChangeEvent:kz.netcracker.libra.event.model.AuthorChangeEvent,BookEvent:kz.netcracker.libra.event.model.BookEvent
        
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.value.default.type: kz.netcracker.libra.event.model.AuthorChangeEvent
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer

app:
  kafka:
    topics:
      author-events:
        name: ${KAFKA_AUTHOR_EVENT_TOPIC_NAME:libra.public.authors}
        groupId: ${KAFKA_AUTHOR_EVENT_GROUPID:libra-author-group}
        concurrency: ${KAFKA_AUTHOR_CONSUMER_CONCURRENCY:1}
      book-events: 
        name: ${KAFKA_BOOK_EVENT_TOPIC_NAME:book-events}
        partitions: ${KAFKA_BOOK_EVENTS_PARTITIONS:2}
        replicas: ${KAFKA_BOOK_EVENTS_REPLICAS:1}
        concurrency: ${KAFKA_BOOK_CONSUMER_CONCURRENCY:2}

logging:
  level:
    kz.netcracker.libra: ${LOGGER_LIBRA_APP:DEBUG}
    
springdoc-api-docs:
  swagger-ui:
    path: /swagger-ui.html
  openapi:
    path: /v3/api-docs
    enabled: true
  operations-sorter: method  # method, alpha, none
  